version: '3.7'
services:
  postgres-product:
    container_name: postgres-product
    image: postgres
    environment:
      POSTGRES_DB: product-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: tranthanhtan
      PGDATA: /data/postgres
    volumes:
      - ./postgres-product:/data/postgres
    ports:
      - "5431:5432"  # Host port 5431 mapped to container port 5432
    restart: always

  postgres-order:
    container_name: postgres-order
    image: postgres
    environment:
      POSTGRES_DB: order-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: tranthanhtan
      PGDATA: /data/postgres
    volumes:
      - ./postgres-order:/data/postgres
    ports:
      - "5432:5432"  # Host port 5432 mapped to container port 5432
    restart: always

  postgres-inventory:
    container_name: postgres-inventory
    image: postgres
    environment:
      POSTGRES_DB: inventory-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: tranthanhtan
      PGDATA: /data/postgres
    volumes:
      - ./postgres-inventory:/data/postgres
    ports:
      - "5433:5432"  # Host port 5433 mapped to container port 5432
    restart: always

  ## Product-Service Docker Compose Config
  product-service:
    container_name: product-service
    image: thanhtantg2003/product-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-product:5432/product-service
    ports:
      - "8081:8081"
    depends_on:
      - postgres-product
      - discovery-server
      - api-gateway

  ## Order-Service Docker Compose Config
  order-service:
    container_name: order-service
    image: thanhtantg2003/order-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-order:5432/order-service
    ports:
      - "8082:8082"
    depends_on:
      - postgres-order
      - discovery-server
      - api-gateway

  ## Inventory-Service Docker Compose Config
  inventory-service:
    container_name: inventory-service
    image: thanhtantg2003/inventory-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-inventory:5432/inventory-service
    ports:
      - "8083:8083"
    depends_on:
      - postgres-inventory
      - discovery-server
      - api-gateway

  ## Eureka Server
  discovery-server:
    image: thanhtantg2003/discovery-server:latest
    container_name: discovery-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  ## API Gateway
  api-gateway:
    image: thanhtantg2003/api-gateway:latest
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=TRACE
    depends_on:
      - discovery-server
